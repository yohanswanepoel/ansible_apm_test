- name: Test Playbook
  hosts: localhost
  vars:
    kube_cpu: 4
    kube_memory: 12g
    kube_disk: 50G
    kube_profile: apmtest
    kube_modules:
      - metrics-server
      #- dashboard
      - registry
      - ingress
      - ingress-dns
  tasks:
    - block:
        - name: Start Kubernetes Test Environment
          command: "minikube start --profile={{ kube_profile }} --disk-size={{ kube_disk }} --cpus={{ kube_cpu }} --memory={{ kube_memory }} --container-runtime=cri-o"
        - name: Enable Addons
          command: "minikube --profile={{ kube_profile }} addons enable {{ item }}"
          with_items:
            - "{{ kube_modules }}"
        - name: Create a k8s namespace
          kubernetes.core.k8s:
            api_version: v1
            kind: Namespace
            name: development
            state: present
        - name: Create a Deployment
          k8s:
            state: present      # State=present when you need to create new object
            namespace: development # defining the namespace
            src: java_app/petclinic_with_apm.yaml
            wait: yes
            wait_condition:
              type: Available
              status: True
              reason: MinimumReplicasAvailable
        - name: Create a Service
          k8s:
            state: present      # State=present when you need to create new object
            namespace: development # defining the namespace
            src: java_app/petclinic_service.yaml 
        - name: Set development namespace context
          command: kubectl config set-context --current --namespace=development
        - name: Get Nodeport IP Address
          command: minikube -p apmtest ip
          register: test_ip
        - name: Get test url
          command: "kubectl get svc petclinic -n development -o go-template='http://{{ test_ip.stdout }}:{{ '{{' }}range.spec.ports{{ '}}' }}{{ '{{' }}if .nodePort{{ '}}' }}{{ '{{' }}.nodePort{{ '}}' }}{{ '{{' }}end{{ '}}' }}{{ '{{' }}end{{ '}}' }}'"
          register: test_url
        - name: Service URL for the petclinic
          debug:
            var: test_url.stdout
        - name: Run tests to generate APM traffic
          shell: python java_app/generate_traffic.py {{ test_url.stdout }}
        #- name: Get petclinic url
        #  command: "minikube --profile=apmtest service petclinic -n development"
        #  register: petclinic_url
        #- name: Display number of Services in the myapp namespace.
        #  debug:
        #    var: petclinic_url

      #rescue:
      #  - name: delete Minikube
      #    command: "minikube delete --profile={{ kube_profile }}"
      